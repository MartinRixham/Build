#! /bin/bash

local name=$(get_name)
local compiler=$(get_compiler)
local includes="-Ibuild/include $(get_includes source_dependencies)"
local test_includes="-Ibuild/include $(get_includes all)"
local links="-Lbuild/lib $(get_module_links all) $(get_links all) $(get_static_links all | non_empty | map link_statically)"

gcovr_compile()
{
	verbose $(echo $compiler | map without_flags) -c -fprofile-arcs -ftest-coverage -o $(get_output $1) $includes $1
}

gcovr_compile_test()
{
	verbose $(echo $compiler | map without_flags) -c -o $(get_output $1) $test_includes $1
}

gcovr_link()
{
	verbose $(echo $compiler | map without_flags) --coverage -o $(get_executable $1) $1 $(all_sources | map get_output | not is_executable) -lgcov $links
}

gcovr_run_test()
{
	$1 &> /dev/null
}

mkdir -p build/gcovr/build/bin
copy_all src build/gcovr
copy_all test build/gcovr
copy_all build/lib build/gcovr/build
copy_all build/include build/gcovr/build

cd build/gcovr
get_sources src | map make_directory | parmap gcovr_compile
get_sources test | map make_directory | parmap gcovr_compile_test
get_sources test | map get_output | filter is_executable | map gcovr_link
get_sources test | map get_output | filter is_executable | map get_executable | map gcovr_run_test
verbose gcovr -r . --html --html-details -o coverage_report$(date +%s).html
cd ../..
