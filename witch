#! /bin/bash

set -Eeuo pipefail

map()
{
	while read line; do
		echo $line | $@
	done
}

call()
{
	while read line; do
		$@ $line
	done
}

filter()
{
	while read line; do
		if echo $line | $@; then
			echo $line
		fi
	done
}

not()
{
	while read line; do
		if ! echo $line | $@; then
			echo $line
		fi
	done
}

clean()
{
	rm -rf build
}

is_installed()
{
	brew ls --versions $(cat) > /dev/null
}

install()
{
	not is_installed | call brew install
}

install_jq()
{
	echo jq | install
	JQ=$(brew --prefix jq)/bin/jq
}

install_dependencies()
{
	$JQ -r .[] | map install
}

make_directories()
{
	mkdir -p build/src
}

get_sources()
{
	find src -name "*.c"
}

compile()
{
	gcc -Wall -o build/src/$(cat) $(get_sources)
}

build()
{
	echo $1 | $JQ .dependencies | install_dependencies 
	make_directories
	echo $1 | $JQ -r .name | compile
}

make_recipe()
{
	install_jq
	build "$(cat $1)"
}

for task in $@; do
	case $task in
    	clean) clean;;
    	compile|package) make_recipe recipe.json;;
	esac
done
